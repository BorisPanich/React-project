{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","dialogs","dialog__item","active","src","image","alt","img","to","link","name","Message","message","message__item","text","maxLength100","maxLengthCreator","DialogsFormDataRedux","reduxForm","form","box","onSubmit","handleSubmit","Field","placeholder","textarea","component","Textarea","validate","requiredField","btn","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","dialog","messagesElements","messagesData","dialogs__wrapper","dialog__list","messages","message__list","values","sendMessage","newMessageBody","compose","connect","dispatch","SendMessageBodyActionCreator","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,aAAe,8BAA8B,cAAgB,+BAA+B,QAAU,yBAAyB,SAAW,0BAA0B,IAAM,qBAAqB,SAAW,0BAA0B,IAAM,uB,oBCAjTD,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,aAAe,iCAAiC,aAAe,iCAAiC,QAAU,4BAA4B,OAAS,2BAA2B,KAAO,yBAAyB,IAAM,0B,oBCA1RD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,cAAgB,mCAAmC,cAAgB,mCAAmC,QAAU,6BAA6B,KAAO,4B,+GCuBhNC,EAbI,SAACC,GAClB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACE,8BACE,qBAAIC,UAAS,UAAKC,IAAQC,aAAb,YAA6BD,IAAQE,QAAlD,UACE,qBAAKC,IAAKP,EAAMQ,MAAOC,IAAK,MAAON,UAAWC,IAAQM,MACtD,cAAC,IAAD,CAASC,GAAIV,EAAME,UAAWC,IAAQQ,KAAtC,SAA6CZ,EAAMa,a,kBCF5CC,EARC,SAACd,GACf,OACE,oBAAIG,UAAWY,IAAQC,cAAvB,SACE,mBAAGb,UAAWY,IAAQE,KAAtB,SAA6BjB,EAAMe,a,iCCmBnCG,EAAeC,YAAiB,KA4DhCC,EAAuBC,YAA+B,CAC3DC,KAAM,wBADsBD,EAhB6C,SAACrB,GAC1E,OACC,uBAAMG,UAAWC,IAAQmB,IAAKC,SAAUxB,EAAMyB,aAA9C,UACC,8BACC,cAACC,EAAA,EAAD,CAAOb,KAAM,iBAAkBc,YAAY,sBAAsBxB,UAAWC,IAAQwB,SACnFC,UAAWC,IACXC,SAAU,CAACC,IAAed,OAG5B,8BACC,wBAAQf,UAAWC,IAAQ6B,IAA3B,0BAWWC,EA/DC,SAAClC,GAEhB,IAAMmC,EAAQnC,EAAMoC,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAC7C,OAAO,cAAC,EAAD,CAAYtC,GAAIsC,EAAOtC,GAAIW,KAAM2B,EAAO3B,KAAsBL,MAAOgC,EAAOhC,OAAzBgC,EAAOtC,OAE5DuC,EAAmBN,EAAMO,aAAaH,KAAI,SAAAxB,GAC/C,OAAO,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQb,OAaxD,OACC,sBAAKC,UAAWC,IAAQuC,iBAAxB,UACC,qBAAKxC,UAAWC,IAAQA,QAAxB,SACC,oBAAID,UAAWC,IAAQwC,aAAvB,SACEP,MAGH,sBAAKlC,UAAWC,IAAQyC,SAAxB,UACC,oBAAI1C,UAAWC,IAAQ0C,cAAvB,SACC,8BAAML,MAEP,cAACrB,EAAD,CAAsBI,SAhBH,SAACuB,GAEtB/C,EAAMgD,YAAYD,EAAOE,0B,wBC3BZC,sBACdC,aAfuB,SAAChB,GACxB,MAAO,CACNC,YAAaD,EAAMC,gBAIM,SAACgB,GAC3B,MAAO,CACNJ,YAAa,SAACC,GACbG,EAASC,YAA6BJ,SAOxCK,IAFcJ,CAGbhB","file":"static/js/4.27262097.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__1W7l0\",\"dialog__list\":\"Dialogs_dialog__list__10mS9\",\"message__list\":\"Dialogs_message__list__1MsRL\",\"dialogs\":\"Dialogs_dialogs__3J3H0\",\"messages\":\"Dialogs_messages__3gWos\",\"box\":\"Dialogs_box__1c-pe\",\"textarea\":\"Dialogs_textarea__IXHkt\",\"btn\":\"Dialogs_btn__B4WqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"DialogItem_dialogs__wrapper__1mYn-\",\"dialog__list\":\"DialogItem_dialog__list__1QAES\",\"dialog__item\":\"DialogItem_dialog__item__1o0T0\",\"dialogs\":\"DialogItem_dialogs__39Xp7\",\"active\":\"DialogItem_active__SIRiA\",\"link\":\"DialogItem_link__3HnpK\",\"img\":\"DialogItem_img__3CBfP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"MessageItem_dialogs__wrapper__2swXx\",\"message__list\":\"MessageItem_message__list__3SUl4\",\"message__item\":\"MessageItem_message__item__3gh8N\",\"message\":\"MessageItem_message__11g3n\",\"text\":\"MessageItem_text__2F93m\"};","import React from 'react';\nimport dialogs from './DialogItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\n\ntype DialogItem = {\n  id: string\n  name: string\n  image: string\n}\n\nconst DialogItem = (props: DialogItem) => {\n  const path = '/dialogs/' + props.id;\n\n  return (\n    <div>\n      <li className={`${dialogs.dialog__item} ${dialogs.active}`}>\n        <img src={props.image} alt={'ava'} className={dialogs.img}/>\n        <NavLink to={path} className={dialogs.link}>{props.name}</NavLink>\n      </li>\n    </div>\n  )\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport message from './MessageItem.module.css';\n\n\ntype MessageItem = {\n  message: string\n}\n\nconst Message = (props: MessageItem) => {\n  return (\n    <li className={message.message__item}>\n      <p className={message.text}>{props.message}</p>\n    </li>\n  )\n}\n\nexport default Message;\n","import React from 'react';\nimport dialogs from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './MessageItem/MessageItem';\nimport { Field, InjectedFormProps } from 'redux-form';\nimport { reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormControls/FormControls';\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validators';\n\ntype DialogsPropsType = {\n\tdialogsPage: MessagePageType\n\tsendMessage: (newMessageBody: string) => void\n\tisAuth: boolean\n}\n\nexport type DialogsDataType = {\n\tid: string\n\tname: string\n\timage: string\n}\nexport type MessagesDataType = {\n\tid: string\n\tmessage: string\n}\n\nexport type MessagePageType = {\n\tmessagesData: Array<MessagesDataType>\n\tdialogsData: Array<DialogsDataType>\n}\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst Dialogs = (props: DialogsPropsType) => {\n\n\tconst state = props.dialogsPage;\n\n\tconst dialogsElements = state.dialogsData.map(dialog => {\n\t\treturn <DialogItem id={dialog.id} name={dialog.name} key={dialog.id} image={dialog.image} />;\n\t})\n\tconst messagesElements = state.messagesData.map(message => {\n\t\treturn <Message message={message.message} key={message.id} />\n\t})\n\n\n\t// if (!props.isAuth) {\n\t// \t return <Redirect to={'/login'}/>\n\t// }\n\n\tconst addNewMessage = (values: any) => {\n\t\t// console.log(values)\n\t\tprops.sendMessage(values.newMessageBody);\n\t}\n\n\treturn (\n\t\t<div className={dialogs.dialogs__wrapper}>\n\t\t\t<div className={dialogs.dialogs}>\n\t\t\t\t<ul className={dialogs.dialog__list}>\n\t\t\t\t\t{dialogsElements}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className={dialogs.messages}>\n\t\t\t\t<ul className={dialogs.message__list}>\n\t\t\t\t\t<div>{messagesElements}</div>\n\t\t\t\t</ul>\n\t\t\t\t<DialogsFormDataRedux onSubmit={addNewMessage} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\ntype DialogsFormDataType = {\n\tnewMessageBody: string\n}\n\nconst DialogsFormData: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\n\treturn (\n\t\t<form className={dialogs.box} onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field name={'newMessageBody'} placeholder='Type your message..' className={dialogs.textarea}\n\t\t\t\t\tcomponent={Textarea}\n\t\t\t\t\tvalidate={[requiredField, maxLength100]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button className={dialogs.btn}>Send</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst DialogsFormDataRedux = reduxForm<DialogsFormDataType>({\n\tform: 'dialogAddMessageForm'\n})(DialogsFormData)\n\n\nexport default Dialogs;\n","import React from 'react';\nimport { SendMessageBodyActionCreator} from '../../redux/dialogspage-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {withAuthRedirect} from '../../hoc/AuthRedirect';\nimport {compose, Dispatch} from 'redux';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tdialogsPage: state.dialogsPage,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n\treturn {\n\t\tsendMessage: (newMessageBody: string) => {\n\t\t\tdispatch(SendMessageBodyActionCreator(newMessageBody))\n\t\t}\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithAuthRedirect\n)(Dialogs) as React.FunctionComponent<any>\n\n\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\n//\n// export default DialogsContainer;\n"],"sourceRoot":""}